/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package codeflow

import codeflow.java.AstReader
import java.nio.file.Files
import java.nio.file.Path
import kotlin.test.Test
import kotlin.test.assertNotNull


class AppTest {

    private val userDirectory = System.getProperty("user.dir")
    private val userDirPath = Path.of(userDirectory)
    private val testResourcesPath = userDirPath
        .resolve("src")
        .resolve("test")
        .resolve("resources")

    private fun codeflow(testDir: String, testFiles: List<String>) {
        val testDirPath = testResourcesPath.resolve(testDir)
        val testFilePaths = testFiles.map { testDirPath.resolve(it) }
        val graphBuilder = AstReader(testResourcesPath).process(testFilePaths)
        val mergedGraph = graphBuilder.bindMethodCalls()

        val result = ArrayList<String>()
        MermaidExporter(mergedGraph).methodsToMermaid(graphBuilder.getMethods()) { result.add(it) }

        val truth = Files.readAllLines(testDirPath.resolve("truth.md"))
        if (result != truth) {
            Files.write(testDirPath.resolve("result.md"), result)
        }
        assert(result == truth)
    }

    @Test fun base() = codeflow("base", listOf("App.java"))
    @Test fun funcCall() = codeflow("funcCall", listOf("App.java"))
    @Test fun member() = codeflow("member", listOf("App.java"))
}
